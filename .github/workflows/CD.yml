name: Elixir CD

on:
  push:
    branches: [ master ]

jobs:
  build:

    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: '1.10.3' # Define the elixir version [required]
        otp-version: '22.3' # Define the OTP version [required]

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get
    - name: Build Release
      run: mix release
      env:
        MIX_ENV: prod
        DB_NAME: ${{secrets.DB_NAME}},
        DB_USERNAME: ${{ secrets.DB_USERNAME }},
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }},
        DB_HOST: ${{ secrets.DB_HOST }}

    - name: Move release to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        source: "_build/prod/rel/server/*"
        target: "~/app/"

    - name: Stop previous release
      continue-on-error: true
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        script: ./app/_build/prod/rel/server/bin/server stop

    - name: Run Migrations
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        script: ./app/_build/prod/rel/server/bin/server eval "DB.Migrator.migrate"

    - name: Start Release
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        script: ./app/_build/prod/rel/server/bin/server daemon

